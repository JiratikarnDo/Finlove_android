// Generated by view binder compiler. Do not edit!
package th.ac.rmutto.finlove.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import th.ac.rmutto.finlove.R;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnNext;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final TextView message;

  @NonNull
  public final TextView message2;

  @NonNull
  public final TextView registerTitle;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnNext,
      @NonNull ImageView imageView3, @NonNull TextView message, @NonNull TextView message2,
      @NonNull TextView registerTitle) {
    this.rootView = rootView;
    this.btnNext = btnNext;
    this.imageView3 = imageView3;
    this.message = message;
    this.message2 = message2;
    this.registerTitle = registerTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_next;
      Button btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.message;
      TextView message = ViewBindings.findChildViewById(rootView, id);
      if (message == null) {
        break missingId;
      }

      id = R.id.message2;
      TextView message2 = ViewBindings.findChildViewById(rootView, id);
      if (message2 == null) {
        break missingId;
      }

      id = R.id.registerTitle;
      TextView registerTitle = ViewBindings.findChildViewById(rootView, id);
      if (registerTitle == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, btnNext, imageView3, message,
          message2, registerTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
